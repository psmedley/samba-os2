#!/usr/bin/env python

bld.RECURSE('gensec')
bld.RECURSE('kerberos')
bld.RECURSE('ntlm')

bld.SAMBA_SUBSYSTEM('auth_session',
	source='session.c',
	autoproto='session_proto.h',
	public_deps='samba-credentials',
	public_headers='session.h',
	header_path='samba',
	deps='samdb auth4_sam'
	)

bld.SAMBA_LIBRARY('auth_unix_token',
                  source='unix_token.c',
                  autoproto='unix_token_proto.h',
                  public_deps='LIBWBCLIENT_OLD',
                  private_library=True,
                  )


bld.SAMBA_SUBSYSTEM('samba_server_gensec',
	source='samba_server_gensec.c',
	public_deps='samba-credentials gensec auth4'
	)


bld.SAMBA_SUBSYSTEM('auth_system_session',
	source='system_session.c',
	autoproto='system_session_proto.h',
	public_deps='samba-credentials',
	deps='auth_session',
	)


bld.SAMBA_SUBSYSTEM('auth4_sam',
	source='sam.c',
	autoproto='auth_sam.h',
	public_deps='samdb samba-security ldb tevent',
	deps=''
	)

bld.SAMBA_BINARY('test_kerberos',
        source='tests/kerberos.c ../../lib/async_req/async_sock.c',
        deps='''cmocka authkrb5 krb5samba com_err CREDENTIALS_KRB5
            ndr-standard
            NDR_LSA
            NDR_DNSP
            NDR_SPOOLSS
samba-util popt CMDLINE_S4 ndr-table samba-errors NDR_DCERPC replace samba-debug NDR_WITNESS NDR_SMBXSRV NDR_FSRVP NDR_IDMAP NDR_WITNESS NDR_SMBXSRV NDR_FSRVP NDR_IDMAP NDR_MDSSVC NDR_SPOOLSS NDR_NEGOEX ndr-standard ndr_nbt tdb util_tdb sys_rw time-basic socket-blocking server-role genrand ndr-krb5pac asn1util smbconf dbwrap messages_dgm msghdr tevent tevent-util samba3-util util_reg iov_buf interfaces util_setid cli_smb_common samba-cluster-support LIBTSOCKET CHARSET3 server_id_db smbd_shim messages_util tdb-wrap3 tdb-wrap talloc_report ldb samdb-common cli-ldap-common flag_mapping SAMDB_SCHEMA cliauth
''',
        local_include=False,
        for_selftest=True
        )

bld.SAMBA_BINARY('test_auth_sam',
        source='tests/sam.c',
        deps='cmocka samdb samba-security ldb tevent',
        local_include=False,
        for_selftest=True,
        ldflags='''
            -Wl,--wrap,dsdb_search_dn
            -Wl,--wrap,samdb_msg_add_int64
        '''
        )

bld.SAMBA_BINARY('test_heimdal_gensec_unwrap_des',
                 source='tests/heimdal_unwrap_des.c',
                 deps='cmocka talloc gssapi-subsystem',
                 local_include=False,
                 for_selftest=True,
                 enabled=(bld.CONFIG_SET('SAMBA4_USES_HEIMDAL') and
                          not bld.CONFIG_SET('USING_SYSTEM_GSSAPI')),
                 ldflags='''
                 -Wl,--wrap,ct_memcmp
                 -Wl,--wrap,der_get_length
                 -Wl,--wrap,krb5_auth_con_getlocalsubkey
                 -Wl,--wrap,krb5_crypto_destroy
                 -Wl,--wrap,krb5_crypto_init
                 -Wl,--wrap,krb5_decrypt
                 -Wl,--wrap,krb5_decrypt_ivec
                 -Wl,--wrap,krb5_free_keyblock
                 -Wl,--wrap,krb5_verify_checksum
                 -Wl,--wrap,malloc
                 '''
)

pytalloc_util = bld.pyembed_libname('pytalloc-util')
pyparam_util = bld.pyembed_libname('pyparam_util')
pyldb_util = bld.pyembed_libname('pyldb-util')
pycredentials = 'pycredentials'
bld.SAMBA_PYTHON('pyauth',
        source='pyauth.c',
        public_deps='auth_system_session',
        deps='samdb %s %s %s %s auth4' % (pytalloc_util, pyparam_util, pyldb_util, pycredentials),
        realname='samba/auth.so'
        )

